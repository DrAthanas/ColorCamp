[tool.poetry]
name = "colorcamp"
version = "0.2.1"
description = "A collection of colors is a Camp!"
readme = "README.md"
license = "Apache-2.0"
authors = ["Argus J Athanas <argus@athanas.org>"]
repository = "https://github.com/DrAthanas/ColorCamp"
keywords = ["color","palette","colormap","camp","plotting"]
classifiers = [
  'Development Status :: 4 - Beta',
  'Intended Audience :: Developers',
  'Intended Audience :: Science/Research',
  'Framework :: Jupyter',
  'Framework :: Pytest',
  'Natural Language :: English',
  'Topic :: Artistic Software',
  'Topic :: Scientific/Engineering',
  'Typing :: Typed',
  'Topic :: Multimedia :: Graphics',
]


[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-cov = "^4.1"
isort = "^5.0"
beautifulsoup4 = "^4.12"
black = "^23.11"
mypy = "^1.5"
pylint = "^2.16"
pre-commit = "^3.6.1"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
  \.toml
  |\.sh
  |\.git
  |\.ini
  |\.ipynb
)/
'''

[tool.mypy]
exclude = "colorcamp/tests/"

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[tool.coverage.run]
omit = [
  'colorcamp/__version__.py',
  'colorcamp/tests/*',
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    "@(abc\\.)?abstractproperty",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"